[package]
name = "sls-webgpu-game"
version = "0.1.0"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = { version = "0.2.45", features = ["serde-serialize"] }
wasm-bindgen-futures = {version="~0.4"}

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.
wee_alloc = { version = "0.4.2", optional = true }
console_log = "0.2.0"
log = "0.4.14"
js-sys = "*"
nalgebra-glm = "*"
lazy_static = "*"
serde = { version = "~1.0", features = ["derive"] }

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "=0.3.51"
features = [
    "console",
    "Window",
    "Document",
    "HtmlCanvasElement",
    "EventTarget",
    "KeyboardEvent",
    "Navigator",
    "Node",
    "NodeList",
]


[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = "=0.3.51"
getrandom = { version = "0.2.3", features = ["js"] }
legion = { version = "0.4.0", default-features = false, features = ["wasm-bindgen", "codegen", "serialize", "extended-tuple-impls"] }


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
legion = { version = "0.4.0", default-features = true, features = ["codegen", "serialize", "extended-tuple-impls"] }



# The `console_error_panic_hook` crate provides better debugging of panics by
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit test.
[dev-dependencies]
wasm-bindgen-test = "0.2.45"
futures = "0.1.27"
wasm-bindgen-futures = "0.3.22"
